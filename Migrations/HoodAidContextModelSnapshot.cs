// <auto-generated />
using System;
using HoodAid.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HoodAid.Migrations
{
    [DbContext(typeof(HoodAidContext))]
    partial class HoodAidContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("HoodAid.Models.DiaryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Activity")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Atemnot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Durchfall")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GeruchssinnVerlust")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Gliederschmerzen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Husten")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Kurzatmigkeit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Muedigkeit")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DiaryEntries");
                });

            modelBuilder.Entity("HoodAid.Models.HealthAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HealthAuthorities");
                });

            modelBuilder.Entity("HoodAid.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("HoodAid.Models.Symptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Symptoms");
                });

            modelBuilder.Entity("HoodAid.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<string>("Nachname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ort")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plz")
                        .HasColumnType("TEXT");

                    b.Property<string>("Strasse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nachname = "Lelaire",
                            Ort = "Kaltenkirchen",
                            Plz = "24568",
                            Strasse = "Rosmarinweg 5",
                            Vorname = "Thomas"
                        });
                });

            modelBuilder.Entity("HoodAid.Models.ContactPerson", b =>
                {
                    b.HasBaseType("HoodAid.Models.Person");

                    b.Property<int?>("DiaryEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.HasIndex("DiaryEntryId");

                    b.HasDiscriminator().HasValue("ContactPerson");
                });

            modelBuilder.Entity("HoodAid.Models.Patient", b =>
                {
                    b.HasBaseType("HoodAid.Models.Person");

                    b.Property<int>("HealthAuthorityId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("HealthAuthorityId");

                    b.HasDiscriminator().HasValue("Patient");
                });

            modelBuilder.Entity("HoodAid.Models.ContactPerson", b =>
                {
                    b.HasOne("HoodAid.Models.DiaryEntry", null)
                        .WithMany("Contacts")
                        .HasForeignKey("DiaryEntryId");
                });

            modelBuilder.Entity("HoodAid.Models.Patient", b =>
                {
                    b.HasOne("HoodAid.Models.HealthAuthority", "HealthAuthority")
                        .WithMany("Patients")
                        .HasForeignKey("HealthAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
